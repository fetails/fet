/**
* Author: viking - 2020.
* Description: WebGL Framework
* Codename: Achi
* @param {github} https://github.com/fetails
*/
let config=function(){this.version="v0.3 - unstable",this.clear_color=[20,20,20,1],this.modifier=0,this.draw_lines=!1},AchiObject=function(t="john.doe"){return new Promise((i,s)=>{let e=new XMLHttpRequest;e.open("GET",t),e.onload=function(){this.status>=200&&this.status<300?i(e.responseText):s({status:this.status,statusText:e.statusText})},e.onerror=function(){s({status:this.status,statusText:e.statusText})},e.send()})};class AchiShader{constructor(t,i,s){this.gl=t.gl;let e=this.gl.createShader(this.gl.VERTEX_SHADER);this.gl.shaderSource(e,i),this.gl.compileShader(e);let h=this.gl.createShader(this.gl.FRAGMENT_SHADER);this.gl.shaderSource(h,s),this.gl.compileShader(h);let r=this.gl.createProgram();this.gl.attachShader(r,e),this.gl.attachShader(r,h),this.gl.linkProgram(r),this.gl.validateProgram(r),this.gl.deleteShader(e),this.gl.deleteShader(h),this.program=r}begin(){this.gl.useProgram(this.program)}end(){this.gl.useProgram(null)}send_float(t,i){let s=i;this.gl.uniform1f(this.gl.getUniformLocation(this.program,t),s)}}class AchiBuffer{constructor(t,i){this.vertices=t,this.indices=i}}class Achi{constructor(t,i=!0){if(this.canvas=document.querySelector(t),this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.buffer=[],this.indices=[],this.gl=this.canvas.getContext("webgl2"),!this.gl)return void alert("[Achi] Error! Your browser does not support WebGL2. :(");this.config=new config;let s=new dat.GUI;s.add(this.config,"version"),s.addColor(this.config,"clear_color"),s.add(this.config,"draw_lines"),i&&window.addEventListener("resize",()=>{this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight})}clear(){this.gl.clearColor(this.config.clear_color[0]/255,this.config.clear_color[1]/255,this.config.clear_color[2]/255,this.config.clear_color[3]),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),this.gl.enable(this.gl.DEPTH_TEST),this.gl.viewport(0,0,this.canvas.width,this.canvas.height)}begin(){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vbo),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.ibo),this.gl.vertexAttribPointer(0,3,this.gl.FLOAT,this.gl.FALSE,0,0),this.gl.enableVertexAttribArray(0)}end(){this.gl.disableVertexAttribArray(0),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,null),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null)}buff(t){this.buffer.push(t.vertices),this.indices.push(t.indices)}create(t=!1){t&&this.buff(new AchiBuffer([0,0,0,-.5,-.5,0,.5,-.5,0],[0,1,2,1,2,3])),this.sorted_indices=[].concat.apply([],this.indices),this.sorted_buffers=[].concat.apply([],this.buffer),this.vbo=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vbo),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(this.sorted_buffers),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this.ibo=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.ibo),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,new Uint16Array(this.sorted_indices),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,null)}render(){this.gl.drawElements(1==this.config.draw_lines?this.gl.LINE_LOOP:this.gl.TRIANGLES,this.sorted_indices.length,this.gl.UNSIGNED_SHORT,0)}}